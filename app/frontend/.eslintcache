[{"C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\index.js":"1","C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\App.js":"2","C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\components\\login\\Login.js":"4","C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\components\\constants.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":533,"mtime":1610586510772,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4135,"mtime":1610585787487,"results":"10","hashOfConfig":"7"},{"size":36,"mtime":1610586391341,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1c6oteq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\index.js",[],["26","27"],"C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\App.js",["28","29"],"import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from './components/login/Login'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <CssBaseline />\n        <Suspense fallback={<Fragment />}>\n          <Switch>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n        </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\components\\login\\Login.js",["30","31"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { BRAND_NAME } from \"../constants\";\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: \"\", password: \"\", authflag: 1 };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      username: event.state.username,\r\n      password: event.state.password,\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.username == \"admin@littech.in\" &&\r\n      this.state.password == \"secret\"\r\n    ) {\r\n      this.props.history.push(\"/home\");\r\n    } else {\r\n      alert(\"Incorrect Credntials!\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" alignitems=\"center\" color=\"primary\">\r\n          <Toolbar>\r\n            <Grid container justify=\"center\" wrap=\"wrap\">\r\n              <Grid item>\r\n                <Typography variant=\"h6\">{BRAND_NAME}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid container spacing={0} justify=\"center\" direction=\"row\">\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              spacing={2}\r\n              className=\"login-form\"\r\n            >\r\n              <Paper\r\n                variant=\"elevation\"\r\n                elevation={2}\r\n                className=\"login-background\"\r\n              >\r\n                <Grid item>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"email\"\r\n                          placeholder=\"Email\"\r\n                          fullWidth\r\n                          name=\"username\"\r\n                          variant=\"outlined\"\r\n                          value={this.state.username}\r\n                          onChange={(event) =>\r\n                            this.setState({\r\n                              [event.target.name]: event.target.value,\r\n                            })\r\n                          }\r\n                          required\r\n                          autoFocus\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          fullWidth\r\n                          name=\"password\"\r\n                          variant=\"outlined\"\r\n                          value={this.state.password}\r\n                          onChange={(event) =>\r\n                            this.setState({\r\n                              [event.target.name]: event.target.value,\r\n                            })\r\n                          }\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"button-block\"\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot Password?\r\n                  </Link>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n",["32","33"],"C:\\Users\\tigthor\\Documents\\intern-ship\\graphql-react-supermarket\\app\\frontend\\src\\components\\constants.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":37,"nodeType":"40","messageId":"41","endLine":1,"endColumn":41},{"ruleId":"38","severity":1,"message":"42","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":26},{"ruleId":"43","severity":1,"message":"44","line":29,"column":27,"nodeType":"45","messageId":"46","endLine":29,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":30,"column":27,"nodeType":"45","messageId":"46","endLine":30,"endColumn":29},{"ruleId":"34","replacedBy":"47"},{"ruleId":"36","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'MuiThemeProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["49"],["50"],"no-global-assign","no-unsafe-negation"]